//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace TblUrlCallingService.TfService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="TransfastServiceSoap", Namespace="https://ibanking.tblbd.com/")]
    public partial class TransfastService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback DownloadInvoicesOperationCompleted;
        
        private System.Threading.SendOrPostCallback PayInvoicesOperationCompleted;
        
        private System.Threading.SendOrPostCallback ComplaintsInvoiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback TfCatalogMethodsOperationCompleted;
        
        private System.Threading.SendOrPostCallback InvoiceStatusOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public TransfastService() {
            this.Url = global::TblUrlCallingService.Properties.Settings.Default.TblUrlCallingService_TfService_TransfastService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event DownloadInvoicesCompletedEventHandler DownloadInvoicesCompleted;
        
        /// <remarks/>
        public event PayInvoicesCompletedEventHandler PayInvoicesCompleted;
        
        /// <remarks/>
        public event ComplaintsInvoiceCompletedEventHandler ComplaintsInvoiceCompleted;
        
        /// <remarks/>
        public event TfCatalogMethodsCompletedEventHandler TfCatalogMethodsCompleted;
        
        /// <remarks/>
        public event InvoiceStatusCompletedEventHandler InvoiceStatusCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://ibanking.tblbd.com/DownloadInvoices", RequestNamespace="https://ibanking.tblbd.com/", ResponseNamespace="https://ibanking.tblbd.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DownloadInvoices(string EmpID, string KeyCode) {
            object[] results = this.Invoke("DownloadInvoices", new object[] {
                        EmpID,
                        KeyCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DownloadInvoicesAsync(string EmpID, string KeyCode) {
            this.DownloadInvoicesAsync(EmpID, KeyCode, null);
        }
        
        /// <remarks/>
        public void DownloadInvoicesAsync(string EmpID, string KeyCode, object userState) {
            if ((this.DownloadInvoicesOperationCompleted == null)) {
                this.DownloadInvoicesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownloadInvoicesOperationCompleted);
            }
            this.InvokeAsync("DownloadInvoices", new object[] {
                        EmpID,
                        KeyCode}, this.DownloadInvoicesOperationCompleted, userState);
        }
        
        private void OnDownloadInvoicesOperationCompleted(object arg) {
            if ((this.DownloadInvoicesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownloadInvoicesCompleted(this, new DownloadInvoicesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://ibanking.tblbd.com/PayInvoices", RequestNamespace="https://ibanking.tblbd.com/", ResponseNamespace="https://ibanking.tblbd.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string PayInvoices(string KeyCode) {
            object[] results = this.Invoke("PayInvoices", new object[] {
                        KeyCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PayInvoicesAsync(string KeyCode) {
            this.PayInvoicesAsync(KeyCode, null);
        }
        
        /// <remarks/>
        public void PayInvoicesAsync(string KeyCode, object userState) {
            if ((this.PayInvoicesOperationCompleted == null)) {
                this.PayInvoicesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPayInvoicesOperationCompleted);
            }
            this.InvokeAsync("PayInvoices", new object[] {
                        KeyCode}, this.PayInvoicesOperationCompleted, userState);
        }
        
        private void OnPayInvoicesOperationCompleted(object arg) {
            if ((this.PayInvoicesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PayInvoicesCompleted(this, new PayInvoicesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://ibanking.tblbd.com/ComplaintsInvoice", RequestNamespace="https://ibanking.tblbd.com/", ResponseNamespace="https://ibanking.tblbd.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ComplaintsInvoice(long RID, string ErrorCode, string Description, string EmpID, string KeyCode) {
            object[] results = this.Invoke("ComplaintsInvoice", new object[] {
                        RID,
                        ErrorCode,
                        Description,
                        EmpID,
                        KeyCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ComplaintsInvoiceAsync(long RID, string ErrorCode, string Description, string EmpID, string KeyCode) {
            this.ComplaintsInvoiceAsync(RID, ErrorCode, Description, EmpID, KeyCode, null);
        }
        
        /// <remarks/>
        public void ComplaintsInvoiceAsync(long RID, string ErrorCode, string Description, string EmpID, string KeyCode, object userState) {
            if ((this.ComplaintsInvoiceOperationCompleted == null)) {
                this.ComplaintsInvoiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnComplaintsInvoiceOperationCompleted);
            }
            this.InvokeAsync("ComplaintsInvoice", new object[] {
                        RID,
                        ErrorCode,
                        Description,
                        EmpID,
                        KeyCode}, this.ComplaintsInvoiceOperationCompleted, userState);
        }
        
        private void OnComplaintsInvoiceOperationCompleted(object arg) {
            if ((this.ComplaintsInvoiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ComplaintsInvoiceCompleted(this, new ComplaintsInvoiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://ibanking.tblbd.com/TfCatalogMethods", RequestNamespace="https://ibanking.tblbd.com/", ResponseNamespace="https://ibanking.tblbd.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string TfCatalogMethods(string TfPin, string Description, string ErrorCode, string KeyCode) {
            object[] results = this.Invoke("TfCatalogMethods", new object[] {
                        TfPin,
                        Description,
                        ErrorCode,
                        KeyCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TfCatalogMethodsAsync(string TfPin, string Description, string ErrorCode, string KeyCode) {
            this.TfCatalogMethodsAsync(TfPin, Description, ErrorCode, KeyCode, null);
        }
        
        /// <remarks/>
        public void TfCatalogMethodsAsync(string TfPin, string Description, string ErrorCode, string KeyCode, object userState) {
            if ((this.TfCatalogMethodsOperationCompleted == null)) {
                this.TfCatalogMethodsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTfCatalogMethodsOperationCompleted);
            }
            this.InvokeAsync("TfCatalogMethods", new object[] {
                        TfPin,
                        Description,
                        ErrorCode,
                        KeyCode}, this.TfCatalogMethodsOperationCompleted, userState);
        }
        
        private void OnTfCatalogMethodsOperationCompleted(object arg) {
            if ((this.TfCatalogMethodsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TfCatalogMethodsCompleted(this, new TfCatalogMethodsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://ibanking.tblbd.com/InvoiceStatus", RequestNamespace="https://ibanking.tblbd.com/", ResponseNamespace="https://ibanking.tblbd.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InvoiceStatus(string TfPin, string Description, string ErrorCode, string KeyCode) {
            object[] results = this.Invoke("InvoiceStatus", new object[] {
                        TfPin,
                        Description,
                        ErrorCode,
                        KeyCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InvoiceStatusAsync(string TfPin, string Description, string ErrorCode, string KeyCode) {
            this.InvoiceStatusAsync(TfPin, Description, ErrorCode, KeyCode, null);
        }
        
        /// <remarks/>
        public void InvoiceStatusAsync(string TfPin, string Description, string ErrorCode, string KeyCode, object userState) {
            if ((this.InvoiceStatusOperationCompleted == null)) {
                this.InvoiceStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInvoiceStatusOperationCompleted);
            }
            this.InvokeAsync("InvoiceStatus", new object[] {
                        TfPin,
                        Description,
                        ErrorCode,
                        KeyCode}, this.InvoiceStatusOperationCompleted, userState);
        }
        
        private void OnInvoiceStatusOperationCompleted(object arg) {
            if ((this.InvoiceStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InvoiceStatusCompleted(this, new InvoiceStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void DownloadInvoicesCompletedEventHandler(object sender, DownloadInvoicesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownloadInvoicesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownloadInvoicesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void PayInvoicesCompletedEventHandler(object sender, PayInvoicesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PayInvoicesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PayInvoicesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void ComplaintsInvoiceCompletedEventHandler(object sender, ComplaintsInvoiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ComplaintsInvoiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ComplaintsInvoiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void TfCatalogMethodsCompletedEventHandler(object sender, TfCatalogMethodsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TfCatalogMethodsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TfCatalogMethodsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void InvoiceStatusCompletedEventHandler(object sender, InvoiceStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InvoiceStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InvoiceStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591